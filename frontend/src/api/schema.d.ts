/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/event/event_show/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список спектаклей в афише */
        get: operations["event_api_get_event_show_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/program": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить программку спектакля по текущей дате */
        get: operations["event_api_get_event_program_by_date"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/event/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список всех спектаклей: репертуар */
        get: operations["event_api_get_event_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/event/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить данные спектакля по slug */
        get: operations["event_api_get_event_by_slug"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/people/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список людей театра */
        get: operations["people_api_get_people_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/people/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить данные человека по slug */
        get: operations["people_api_get_people_by_slug"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/info/info_block/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список инфо-блоков */
        get: operations["info_api_get_info_block_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/info/info_block/menu/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список инфо-блоков в меню */
        get: operations["info_api_get_menu_info_block_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/info/review/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список отзывов */
        get: operations["info_api_get_review_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/info/partner/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список партнеров */
        get: operations["info_api_get_partner_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** EventShowFilterSchema */
        EventShowFilterSchema: {
            /** Is Enable */
            is_enable?: boolean | null;
            /** Event Id */
            event_id?: number | null;
            /** From Current Month */
            from_current_month?: boolean | null;
        };
        /** EventPreviewSchema */
        EventPreviewSchema: {
            dramatist: components["schemas"]["PeoplePreviewSchema"] | null;
            producer: components["schemas"]["PeoplePreviewSchema"] | null;
            /** ID */
            id?: number | null;
            /** Название спектакля */
            name: string;
            /** Слаг названия */
            slug: string;
            /** Краткое описание */
            short_description: string;
            /**
             * Обложка спектакля
             * @description Изображение в списке спектаклей
             */
            cover: string;
            /**
             * Обложка в афише
             * @description Изображение курсора при наведении на спектакль в афише
             */
            preview_cover: string;
            /**
             * Возрастное ограничение
             * @description Минимальный разрешенный возраст зрителя, например, 18 лет
             * @default 0
             */
            min_age_limit: number;
        };
        /** EventShowOutSchema */
        EventShowOutSchema: {
            /** Id */
            id: number;
            event: components["schemas"]["EventPreviewSchema"];
            /**
             * Start At
             * Format: date-time
             */
            start_at: string;
            /** Is Premiere */
            is_premiere: boolean;
            /** Link To Buy Ticket */
            link_to_buy_ticket: string;
        };
        /** PeoplePreviewSchema */
        PeoplePreviewSchema: {
            /** ID */
            id?: number | null;
            /** Имя */
            first_name: string;
            /** Фамилия */
            last_name: string;
            /** Слаг имени */
            slug: string;
            /**
             * Тег
             * @description Фильтр на странице "Коллектив"
             */
            tag?: string | null;
            /**
             * Фотография
             * @default
             */
            photo: string | null;
        };
        /** EventProgramSchema */
        EventProgramSchema: {
            /**
             * Программка спектакля
             * @description PDF файл с программой спектакля
             * @default
             */
            program_pdf: string | null;
            /** Название спектакля */
            name: string;
        };
        /** EventFilterSchema */
        EventFilterSchema: {
            /** Is Enable */
            is_enable?: boolean | null;
        };
        /** EventDetailSchema */
        EventDetailSchema: {
            /** Peoples */
            peoples: components["schemas"]["EventPeopleOutSchema"][];
            /** Images */
            images: components["schemas"]["EventImageOutSchema"][];
            dramatist: components["schemas"]["PeopleShortSchema"] | null;
            producer: components["schemas"]["PeopleShortSchema"] | null;
            /** ID */
            id?: number | null;
            /** Название спектакля */
            name: string;
            /** Слаг названия */
            slug: string;
            /** Краткое описание */
            short_description: string;
            /**
             * Возрастное ограничение
             * @description Минимальный разрешенный возраст зрителя, например, 18 лет
             * @default 0
             */
            min_age_limit: number;
            /**
             * Подробное описание
             * @default
             */
            description: string | null;
            /**
             * Длительность спектакля
             * Format: duration
             */
            duration: string;
            /**
             * Есть антракт
             * @default false
             */
            has_intermission: boolean;
            /**
             * Дата премьеры
             * Format: date
             */
            premiere_at: string;
            /**
             * Обложка спектакля
             * @description Изображение в списке спектаклей
             */
            cover: string;
            /**
             * Обложка в афише
             * @description Изображение курсора при наведении на спектакль в афише
             */
            preview_cover: string;
            /**
             * Обложка спектакля в карточке спектакля
             * @description Главное изображение в карточке спектакля
             */
            detail_cover: string;
            /**
             * Фотография напротив описания спектакля
             * @description Изображение в карточке спектакля
             */
            description_cover: string;
            /**
             * Фотография напротив списка действующих лиц спектакля
             * @description Изображение в карточке спектакля
             */
            actor_cover: string;
        };
        /** EventImageOutSchema */
        EventImageOutSchema: {
            /** ID */
            id?: number | null;
            /** Фото */
            image: string;
        };
        /** EventPeopleOutSchema */
        EventPeopleOutSchema: {
            people: components["schemas"]["PeopleShortSchema"];
            /** ID */
            id?: number | null;
            /**
             * Тег
             * @description Раздел в карточке спектакля, в котором будет отображаться участник
             */
            tag: string;
            /**
             * Роль участника в спектакле
             * @description Если участник - актер: указать имя персонажа. Если участник выполняет другую роль, например, художник - нужно указать "художник"
             * @default
             */
            role: string | null;
            /**
             * Сортировка
             * @default 0
             */
            sort: number;
        };
        /** PeopleShortSchema */
        PeopleShortSchema: {
            /** ID */
            id?: number | null;
            /** Имя */
            first_name: string;
            /** Фамилия */
            last_name: string;
        };
        /** PeopleDetailSchema */
        PeopleDetailSchema: {
            /** ID */
            id?: number | null;
            /** Имя */
            first_name: string;
            /** Фамилия */
            last_name: string;
            /** Слаг имени */
            slug: string;
            /**
             * Тег
             * @description Фильтр на странице "Коллектив"
             */
            tag?: string | null;
            /**
             * Фотография
             * @default
             */
            photo: string | null;
            /**
             * Описание
             * @default
             */
            description: string | null;
            /** Дата рождения */
            birthday?: string | null;
            /**
             * Должность
             * @default
             */
            position: string | null;
            /**
             * Образование
             * @default
             */
            education: string | null;
        };
        /** InfoBlockFilterSchema */
        InfoBlockFilterSchema: {
            /** Is Enable */
            is_enable?: boolean | null;
            /** In Menu */
            in_menu?: boolean | null;
        };
        /** InfoBlockOutSchema */
        InfoBlockOutSchema: {
            /** ID */
            id?: number | null;
            /** Заголовок */
            title: string;
            /** Текст */
            content: string;
            /**
             * Текст кнопки действия
             * @description Текст будет отображаться внутри кнопки. Примеры: "написать в telegram", "перейти на сайт"
             */
            btn_text: string;
            /**
             * Ссылка кнопки
             * @description Ресурс, на который будет перенаправлен пользователь при клике по кнопке
             */
            btn_link: string;
            /**
             * Обложка
             * @description Картинка инфо-блока
             */
            cover: string;
            /** Якорная ссылка */
            menu_title_slug: string;
        };
        /** MenuInfoBlockOutSchema */
        MenuInfoBlockOutSchema: {
            /** ID */
            id?: number | null;
            /**
             * Заголовок в меню
             * @description Текст якорной ссылки, который будет отображаться в меню (хедере)
             */
            menu_title: string;
            /** Якорная ссылка */
            menu_title_slug: string;
        };
        /** ReviewFilterSchema */
        ReviewFilterSchema: {
            /** Is Enable Main */
            is_enable_main?: boolean | null;
            /** Is Enable Event */
            is_enable_event?: boolean | null;
            /** Event Id */
            event_id?: number | null;
        };
        /** ReviewOutSchema */
        ReviewOutSchema: {
            /** ID */
            id?: number | null;
            /**
             * Фотография
             * @description Фото/скрин отзыва
             */
            image: string;
            /**
             * Никнейм
             * @default
             */
            nickname: string | null;
        };
        /** PartnerFilterSchema */
        PartnerFilterSchema: {
            /** Is Enable */
            is_enable?: boolean | null;
        };
        /** PartnerOutSchema */
        PartnerOutSchema: {
            /** ID */
            id?: number | null;
            /** Название */
            name: string;
            /**
             * Логотип
             * @description Логотип компании на главной
             */
            logo: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    event_api_get_event_show_list: {
        parameters: {
            query?: {
                is_enable?: boolean | null;
                event_id?: number | null;
                from_current_month?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventShowOutSchema"][];
                };
            };
        };
    };
    event_api_get_event_program_by_date: {
        parameters: {
            query?: {
                event_date?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventProgramSchema"];
                };
            };
        };
    };
    event_api_get_event_list: {
        parameters: {
            query?: {
                is_enable?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventPreviewSchema"][];
                };
            };
        };
    };
    event_api_get_event_by_slug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventDetailSchema"];
                };
            };
        };
    };
    people_api_get_people_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PeoplePreviewSchema"][];
                };
            };
        };
    };
    people_api_get_people_by_slug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PeopleDetailSchema"];
                };
            };
        };
    };
    info_api_get_info_block_list: {
        parameters: {
            query?: {
                is_enable?: boolean | null;
                in_menu?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InfoBlockOutSchema"][];
                };
            };
        };
    };
    info_api_get_menu_info_block_list: {
        parameters: {
            query?: {
                is_enable?: boolean | null;
                in_menu?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MenuInfoBlockOutSchema"][];
                };
            };
        };
    };
    info_api_get_review_list: {
        parameters: {
            query?: {
                is_enable_main?: boolean | null;
                is_enable_event?: boolean | null;
                event_id?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReviewOutSchema"][];
                };
            };
        };
    };
    info_api_get_partner_list: {
        parameters: {
            query?: {
                is_enable?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PartnerOutSchema"][];
                };
            };
        };
    };
}
